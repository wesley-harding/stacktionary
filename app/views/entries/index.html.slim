.container.entries.index
  - if @entries.empty?
    h4 No entries
  - else
    - unless @search_term['term_cont'].empty?
      h4 Search results for "#{@search_term['term_cont']}"
    hr
    - @entries.order(:cached_votes_up).each do |entry|
      .row.entry
        .col-xs-1.text-center
          .votes
            a.btn.btn-primary.btn-xs.votes-up data-model='entry' class=(['has-vote', 'bg-info'] if !current_user.blank? and current_user.likes entry) Up
            div = entry.get_likes.size
            a.btn.btn-danger.btn-xs.votes-down data-model='entry' class=(['has-vote', 'bg-warning'] if !current_user.blank? and current_user.dislikes entry) Down
        .col-xs-11
          h2 = entry.term
          - if entry.definitions.empty?
            p
              |No Definition
              p.lead
                = button_to 'Create Definition', entry, class: ['btn', 'btn-default'], :method => :get
          - else
            - entry.definitions.order(:cached_votes_up).first(1).each do |definition|
              p = definition.definition
              p.lead
                 = button_to 'View', entry, class: ['btn', 'btn-primary'], :method => :get
          p.pull-right
            / Tags
          ul.list-inline
            li #{entry.definitions.count} definitions
            li #{entry.examples.count} examples
            li #{entry.references.count} resources
          ul.list-inline
            - if entry.user.present? and entry.user.username.present?
              li Created #{time_ago_in_words(entry.created_at)} ago by #{link_to entry.user.username, entry.user}
            - else
              li Created #{time_ago_in_words(entry.created_at)} ago
          hr


    = paginate @entries

    br

